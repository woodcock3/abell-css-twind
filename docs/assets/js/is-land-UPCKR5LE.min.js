(()=>{var b=Object.defineProperty;var y=(d,t,e)=>t in d?b(d,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):d[t]=e;var m=(d,t,e)=>(y(d,typeof t!="symbol"?t+"":t,e),e);var p=(d,t,e)=>new Promise((a,i)=>{var r=h=>{try{f(e.next(h))}catch(u){i(u)}},o=h=>{try{f(e.throw(h))}catch(u){i(u)}},f=h=>h.done?a(h.value):Promise.resolve(h.value).then(r,o);f((e=e.apply(d,t)).next())});var w=new Map,n=class extends HTMLElement{constructor(){super(),this.ready=new Promise(t=>{this.readyResolve=t})}static getParents(t,e=!1){let a=[];for(;t;){if(t.matches&&t.matches(n.tagName)){if(e&&t===e)break;c.hasConditions(t)&&a.push(t)}t=t.parentNode}return a}static ready(t){return p(this,null,function*(){let e=n.getParents(t);if(e.length===0)return;let a=yield Promise.all(e.map(i=>i.wait()));if(a.length)return a[0]})}forceFallback(){window.Island&&Object.assign(n.fallback,window.Island.fallback);for(let t in n.fallback){let e=Array.from(this.querySelectorAll(t)).reverse();for(let a of e){if(!a.isConnected||a.localName===n.tagName)continue;let i=n.ready(a);n.fallback[t](i,a,n.prefix)}}}wait(){return this.ready}connectedCallback(){return p(this,null,function*(){c.hasConditions(this)&&this.forceFallback(),yield this.hydrate()})}getTemplates(){return this.querySelectorAll(`template[${n.attr.template}]`)}replaceTemplates(t){for(let e of t){if(n.getParents(e,this).length>0)continue;let a=e.getAttribute(n.attr.template);if(a==="replace"){let i=Array.from(this.childNodes);for(let r of i)this.removeChild(r);this.appendChild(e.content);break}else{let i=e.innerHTML;if(a==="once"&&i){if(w.has(i)){e.remove();return}w.set(i,!0)}e.replaceWith(e.content)}}}hydrate(){return p(this,null,function*(){let t=[];this.parentNode&&t.push(n.ready(this.parentNode));let e=c.getConditions(this);for(let r in e)c.map[r]&&t.push(c.map[r](e[r],this));yield Promise.all(t),this.replaceTemplates(this.getTemplates());let a,i=this.getAttribute(n.attr.import);if(i&&(a=yield import(i)),a){let r=n.autoinit[this.getAttribute(n.attr.autoInitType)||i];r&&(yield r.call(this,a))}this.readyResolve({}),this.setAttribute(n.attr.ready,""),this.querySelectorAll(`[${n.attr.defer}]`).forEach(r=>r.removeAttribute(n.attr.defer))})}},s=n;m(s,"tagName","is-land"),m(s,"prefix","is-land--"),m(s,"attr",{autoInitType:"autoinit",import:"import",template:"data-island",ready:"ready",defer:"defer-hydration"}),m(s,"fallback",{":not(:defined):not([defer-hydration])":(t,e,a)=>{let i=document.createElement(a+e.localName);for(let o of e.getAttributeNames())i.setAttribute(o,e.getAttribute(o));let r=e.shadowRoot;if(!r){let o=e.querySelector(":scope > template[shadowroot]");o&&(r=e.attachShadow({mode:"open"}),r.appendChild(o.content.cloneNode(!0)))}return r&&i.attachShadow({mode:r.mode}).append(...r.childNodes),i.append(...e.childNodes),e.replaceWith(i),t.then(()=>{i.shadowRoot&&e.shadowRoot.append(...i.shadowRoot.childNodes),e.append(...i.childNodes),i.replaceWith(e)})}}),m(s,"autoinit",{"petite-vue":function(t){t.createApp().mount(this)},vue:function(t){t.createApp().mount(this)},svelte:function(t){new t.default({target:this})},"svelte-ssr":function(t){new t.default({target:this,hydrate:!0})},preact:function(t){t.default(this)}});var l=class{static hasConditions(t){return Object.keys(l.getConditions(t)).length>0}static getConditions(t){let e={};for(let a of Object.keys(l.map))t.hasAttribute(`on:${a}`)&&(e[a]=t.getAttribute(`on:${a}`));return e}static visible(t,e){if("IntersectionObserver"in window)return new Promise(a=>{let i=new IntersectionObserver(r=>{let[o]=r;o.isIntersecting&&(i.unobserve(o.target),a())});i.observe(e)})}static idle(){let t=new Promise(e=>{document.readyState!=="complete"?window.addEventListener("load",()=>e(),{once:!0}):e()});return"requestIdleCallback"in window?Promise.all([new Promise(e=>{requestIdleCallback(()=>{e()})}),t]):t}static interaction(t,e){let a=["click","touchstart"];return t&&(a=(t||"").split(",").map(i=>i.trim())),new Promise(i=>{function r(o){i();for(let f of a)e.removeEventListener(f,r)}for(let o of a)e.addEventListener(o,r,{once:!0})})}static media(t){let e={matches:!0};if(t&&"matchMedia"in window&&(e=window.matchMedia(t)),!e.matches)return new Promise(a=>{e.addListener(i=>{i.matches&&a()})})}static saveData(t){return!("connection"in navigator)||navigator.connection.saveData===(t!=="false")?Promise.resolve():new Promise(()=>{})}},c=l;m(c,"map",{visible:l.visible,idle:l.idle,interaction:l.interaction,media:l.media,"save-data":l.saveData});"customElements"in window&&(window.customElements.define(s.tagName,s),window.Island=s);var v=s.ready;})();
